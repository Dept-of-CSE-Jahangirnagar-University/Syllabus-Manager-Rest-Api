{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","components/syllabus/syllabusTableComponents/YearMenus.js","components/syllabus/syllabusTableComponents/SemesterMenus.js","components/syllabus/syllabusTableComponents/CourseMenus.js","components/syllabus/SyllabusCreator.js","components/AppData.js"],"names":["ButtonGroup","React","forwardRef","props","ref","bsPrefix","size","toggle","vertical","className","_props$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","actionButtonStyle","padding","height","width","YearMenus","Fragment","style","float","Button","id","this","yearData","yearId","variant","onClick","addSemester","icon","faPlusSquare","deleteYear","faTrashAlt","SemesterMenus","addCourse","bind","semesterData","semesterId","deleteSemester","CourseMenus","faPen","SyllabusCreator","getCourseTypes","courseTypesXML","state","syllabusXmlObj","getElementsByTagName","tmpCourseTypes","i","length","push","getAttribute","setState","courseTypes","getCourses","semesterXML","coursesXML","tmpCourses","tmpCourse","courseCode","courseTitle","courseCredit","getSemesters","yearXML","semestersXML","tmpSemesters","courses","getYears","yearsXML","tmpYears","semesters","years","getBasicInfo","parseXMLData","getNumberSuffix","num","getSemesterRowSpan","Math","max","getYearRowSpan","rowSpan","addYear","event","url","Appdata","restApiBaseUrl","syllabusName","parser","DOMParser","Axios","get","then","response","data","parseFromString","currentTarget","split","delete","tmpId","displayAddNewCourseForm","displayAddCourseForm","newCourse","onchangeHandlerForAddNewCourseForm","target","value","saveNewCourse","preventDefault","post","setTimeout","effectiveFrom","effectiveTo","syllabusType","display","Form","onSubmit","Group","Row","Label","column","sm","Col","Control","type","placeholder","border","borderBottom","required","onChange","Table","bordered","map","year","key","floor","random","course","courseIdx","semester","semesterIdx","faPlusCircle"],"mappings":"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","file":"static/js/7.5ea77aef.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { Component } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst actionButtonStyle = {\n  padding: \"0px\",\n  height: \"22px\",\n  width: \"22px\"\n};\n\nclass YearMenus extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ButtonGroup style={{ float: \"right\" }}>\n          <Button\n            id={\"year_\" + this.props.yearData.yearId}\n            size=\"sm\"\n            variant=\"outline-secondary\"\n            style={actionButtonStyle}\n            onClick={this.props.addSemester}\n          >\n            <span>\n              <FontAwesomeIcon\n                id={\"year_\" + this.props.yearData.yearId}\n                icon={faPlusSquare}\n              />\n            </span>\n          </Button>\n          <Button\n            id={\"year_\" + this.props.yearData.yearId}\n            size=\"sm\"\n            variant=\"outline-danger\"\n            style={actionButtonStyle}\n            onClick={this.props.deleteYear}\n          >\n            <span>\n              <FontAwesomeIcon\n                icon={faTrashAlt}\n                id={\"year_\" + this.props.yearData.yearId}\n              />\n            </span>\n          </Button>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default YearMenus;\n","import React, { Component } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst actionButtonStyle = {\n  padding: \"0px\",\n  height: \"22px\",\n  width: \"22px\"\n};\n\nclass SemesterMenus extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ButtonGroup style={{ float: \"right\" }}>\n          <Button\n            size=\"sm\"\n            variant=\"outline-secondary\"\n            style={actionButtonStyle}\n            onClick={this.props.addCourse.bind(\n              this,\n              this.props.semesterData.yearId,\n              this.props.semesterData.semesterId\n            )}\n          >\n            <span>\n              <FontAwesomeIcon icon={faPlusSquare} />\n            </span>\n          </Button>\n\n          <Button\n            id={\n              \"year_\" +\n              this.props.semesterData.yearId +\n              \"_semester_\" +\n              this.props.semesterData.semesterId\n            }\n            size=\"sm\"\n            variant=\"outline-danger\"\n            style={actionButtonStyle}\n            onClick={this.props.deleteSemester}\n          >\n            <span>\n              <FontAwesomeIcon\n                icon={faTrashAlt}\n                id={\n                  \"year_\" +\n                  this.props.semesterData.yearId +\n                  \"_semester_\" +\n                  this.props.semesterData.semesterId\n                }\n              />\n            </span>\n          </Button>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SemesterMenus;\n","import React, { Component } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faPen } from \"@fortawesome/free-solid-svg-icons\";\n\nconst actionButtonStyle = {\n  padding: \"0px\",\n  height: \"22px\",\n  width: \"22px\"\n};\n\nclass CourseMenus extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ButtonGroup style={{ float: \"right\" }}>\n          <Button\n            size=\"sm\"\n            variant=\"outline-secondary\"\n            style={actionButtonStyle}\n          >\n            <span>\n              <FontAwesomeIcon icon={faPen} />\n            </span>\n          </Button>\n\n          <Button size=\"sm\" variant=\"outline-danger\" style={actionButtonStyle}>\n            <span>\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </span>\n          </Button>\n        </ButtonGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CourseMenus;\n","import React, { Component } from \"react\";\n\nimport Appdata from \"../AppData\";\nimport Axios from \"axios\";\nimport { Table, Button, Form, Row, Col } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport YearMenus from \"./syllabusTableComponents/YearMenus\";\nimport SemesterMenus from \"./syllabusTableComponents/SemesterMenus\";\nimport CourseMenus from \"./syllabusTableComponents/CourseMenus\";\n\nclass SyllabusCreator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      syllabusName: \"syl1\",\n      syllabusXmlObj: \"\",\n      effectiveFrom: 0,\n      effectiveTo: 0,\n      syllabusType: \"\",\n      courseTypes: [],\n      years: [],\n      newCourse: {\n        courseCode: \"\",\n        courseTitle: \"\",\n        courseCredit: \"\",\n        yearId: \"\",\n        semesterId: \"\"\n      },\n      displayAddCourseForm: \"none\"\n    };\n\n    this.onchangeHandlerForAddNewCourseForm = this.onchangeHandlerForAddNewCourseForm.bind(\n      this\n    );\n    this.addYear = this.addYear.bind(this);\n    this.deleteYear = this.deleteYear.bind(this);\n    this.addSemester = this.addSemester.bind(this);\n    this.deleteSemester = this.deleteSemester.bind(this);\n    this.addCourse = this.addCourse.bind(this);\n  }\n\n  getCourseTypes = () => {\n    let courseTypesXML = this.state.syllabusXmlObj.getElementsByTagName(\n      \"courseType\"\n    );\n    let tmpCourseTypes = [];\n    for (let i = 0; i < courseTypesXML.length; i++) {\n      tmpCourseTypes.push(courseTypesXML[i].getAttribute(\"name\"));\n    }\n    this.setState({\n      courseTypes: tmpCourseTypes\n    });\n  };\n\n  getCourses = semesterXML => {\n    let coursesXML = semesterXML.getElementsByTagName(\"course\");\n    let tmpCourses = [];\n    for (let i = 0; i < coursesXML.length; i++) {\n      let tmpCourse = {\n        courseCode: \"\",\n        courseTitle: \"\",\n        courseCredit: \"\"\n      };\n      tmpCourse.courseCode = coursesXML[i].getAttribute(\"courseCode\");\n      tmpCourses.push(tmpCourse);\n    }\n    return tmpCourses;\n  };\n\n  getSemesters = yearXML => {\n    let semestersXML = yearXML.getElementsByTagName(\"semester\");\n    let tmpSemesters = [];\n    for (let i = 0; i < semestersXML.length; i++) {\n      tmpSemesters.push({\n        semesterId: semestersXML[i].getAttribute(\"id\"),\n        courses: this.getCourses(semestersXML[i])\n      });\n    }\n    return tmpSemesters;\n  };\n\n  getYears = () => {\n    let yearsXML = this.state.syllabusXmlObj.getElementsByTagName(\"year\");\n    let tmpYears = [];\n    for (let i = 0; i < yearsXML.length; i++) {\n      let tmpSemesters = this.getSemesters(yearsXML[i]);\n      tmpYears.push({\n        yearId: yearsXML[i].getAttribute(\"id\"),\n        semesters: tmpSemesters\n      });\n    }\n    this.setState({\n      years: tmpYears\n    });\n  };\n\n  getBasicInfo = () => {\n    // this.setState({\n    //   effectiveFrom: this.state.syllabusXmlObj.getElementsByTagName(\"\")\n    // });\n  };\n\n  parseXMLData = () => {\n    this.getBasicInfo();\n    this.getCourseTypes();\n    this.getYears();\n  };\n\n  componentDidMount() {\n    let url = `${Appdata.restApiBaseUrl}/syllabus/get/${this.state.syllabusName}`;\n\n    const parser = new DOMParser();\n\n    Axios.get(url)\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          syllabusXmlObj: parser.parseFromString(data, \"text/xml\")\n        });\n        this.parseXMLData();\n      });\n  }\n\n  /** Syllabus Table Functions */\n  getNumberSuffix = num => {\n    if (num % 10 === 1) return \"st\";\n    if (num % 10 === 2) return \"nd\";\n    if (num % 10 === 3) return \"rd\";\n    return \"th\";\n  };\n\n  getSemesterRowSpan = (yearId, semesterId) => {\n    return Math.max(\n      1,\n      this.state.years[yearId].semesters[semesterId].courses.length\n    );\n  };\n\n  getYearRowSpan = yearId => {\n    if (this.state.years[yearId].semesters.length === 0) return 1;\n    let rowSpan = 0;\n    for (let i = 0; i < this.state.years[yearId].semesters.length; i++) {\n      rowSpan += this.getSemesterRowSpan(yearId, i);\n    }\n    return rowSpan;\n  };\n\n  addYear = event => {\n    let url = `${Appdata.restApiBaseUrl}/syllabus/edit/${this.state.syllabusName}/add/year`;\n\n    const parser = new DOMParser();\n\n    Axios.get(url)\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          syllabusXmlObj: parser.parseFromString(data, \"text/xml\")\n        });\n        this.parseXMLData();\n      });\n  };\n\n  deleteYear = event => {\n    let yearId = event.currentTarget.id.split(\"_\")[1];\n    let url = `${Appdata.restApiBaseUrl}/syllabus/edit/${this.state.syllabusName}/delete/year/${yearId}`;\n\n    const parser = new DOMParser();\n\n    Axios.delete(url, {})\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          syllabusXmlObj: parser.parseFromString(data, \"text/xml\")\n        });\n        this.parseXMLData();\n      });\n  };\n\n  addSemester = event => {\n    let yearId = event.currentTarget.id.split(\"_\")[1];\n    let url = `${Appdata.restApiBaseUrl}/syllabus/edit/${this.state.syllabusName}/${yearId}/add/semester`;\n\n    const parser = new DOMParser();\n\n    Axios.get(url)\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          syllabusXmlObj: parser.parseFromString(data, \"text/xml\")\n        });\n        this.parseXMLData();\n      });\n  };\n\n  deleteSemester = event => {\n    let tmpId = event.currentTarget.id.split(\"_\");\n    let yearId = tmpId[1];\n    let semesterId = tmpId[3];\n\n    let url = `${Appdata.restApiBaseUrl}/syllabus/edit/${this.state.syllabusName}/${yearId}/delete/semester/${semesterId}`;\n\n    const parser = new DOMParser();\n\n    Axios.delete(url, {})\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          syllabusXmlObj: parser.parseFromString(data, \"text/xml\")\n        });\n        this.parseXMLData();\n      });\n  };\n\n  displayAddNewCourseForm = (yearId, semesterId) => {\n    this.setState({\n      displayAddCourseForm: \"block\"\n    });\n  };\n\n  addCourse = (yearId, semesterId) => {\n    this.setState({\n      newCourse: {\n        yearId: yearId,\n        semesterId: semesterId\n      }\n    });\n    this.displayAddNewCourseForm(yearId, semesterId);\n  };\n\n  /**Add new course form */\n  onchangeHandlerForAddNewCourseForm = event => {\n    let tmpCourse = this.state.newCourse;\n    tmpCourse.courseCode = event.target.value;\n    this.setState({\n      newCourse: tmpCourse\n    });\n  };\n\n  saveNewCourse = event => {\n    event.preventDefault();\n\n    let url = `${Appdata.restApiBaseUrl}/syllabus/edit/${this.state.syllabusName}/${this.state.newCourse.yearId}/${this.state.newCourse.semesterId}/add/course`;\n    const parser = new DOMParser();\n    Axios.post(url, this.state.newCourse)\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          syllabusXmlObj: parser.parseFromString(data, \"text/xml\")\n        });\n        this.parseXMLData();\n      });\n\n    setTimeout(() => {\n      this.setState({\n        displayAddCourseForm: \"none\"\n      });\n    }, 600);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>{\"Edit Syllabus\"}</h6>\n        <div style={{ display: this.state.displayAddCourseForm }}>\n          <Form onSubmit={this.saveNewCourse}>\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"2\">\n                Course Code\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Course Code\"\n                  size=\"sm\"\n                  style={{\n                    border: \"none\",\n                    borderBottom: \"2px solid gray\"\n                  }}\n                  required\n                  onChange={this.onchangeHandlerForAddNewCourseForm}\n                />\n              </Col>\n              <Col sm=\"3\">\n                <Button variant=\"primary\" type=\"submit\" size=\"sm\">\n                  Add Course\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n        <div>\n          <Table size=\"sm\" bordered>\n            <thead></thead>\n            <tbody>\n              {this.state.years.map((year, yearId) => {\n                return (\n                  <React.Fragment key={Math.floor(Math.random() * 1000)}>\n                    <tr key={Math.floor(Math.random() * 1000)}>\n                      <td rowSpan={this.getYearRowSpan(yearId)}>\n                        {year.yearId +\n                          this.getNumberSuffix(year.yearId) +\n                          \" Year \"}\n                        <YearMenus\n                          yearData={{ yearId: year.yearId }}\n                          addSemester={this.addSemester}\n                          deleteYear={this.deleteYear}\n                        />\n                      </td>\n\n                      {year.semesters.length > 0 ? (\n                        <td rowSpan={this.getSemesterRowSpan(yearId, 0)}>\n                          {year.semesters[0].semesterId +\n                            this.getNumberSuffix(year.semesters[0].semesterId) +\n                            \" Semester \"}\n                          <SemesterMenus\n                            semesterData={{\n                              yearId: year.yearId,\n                              semesterId: year.semesters[0].semesterId\n                            }}\n                            deleteSemester={this.deleteSemester}\n                            addCourse={this.addCourse}\n                          />\n                        </td>\n                      ) : null}\n\n                      {year.semesters.length > 0 &&\n                      year.semesters[0].courses.length > 0 ? (\n                        <React.Fragment key={Math.floor(Math.random() * 1000)}>\n                          <td>\n                            {year.semesters[0].courses[0].courseCode}\n                            <CourseMenus />\n                          </td>\n                        </React.Fragment>\n                      ) : null}\n                    </tr>\n\n                    {year.semesters.length > 0 &&\n                    year.semesters[0].courses.length > 1\n                      ? year.semesters[0].courses.map((course, courseIdx) =>\n                          courseIdx > 0 ? (\n                            <tr key={Math.floor(Math.random() * 1000)}>\n                              <td>\n                                {course.courseCode}\n                                <CourseMenus />\n                              </td>\n                            </tr>\n                          ) : null\n                        )\n                      : null}\n\n                    {year.semesters.length > 1\n                      ? year.semesters.map((semester, semesterIdx) =>\n                          semesterIdx > 0 ? (\n                            <React.Fragment\n                              key={Math.floor(Math.random() * 1000)}\n                            >\n                              <tr key={Math.floor(Math.random() * 1000)}>\n                                <td\n                                  rowSpan={Math.max(1, semester.courses.length)}\n                                >\n                                  {semester.semesterId +\n                                    this.getNumberSuffix(semester.semesterId) +\n                                    \" Semester \"}\n                                  <SemesterMenus\n                                    semesterData={{\n                                      yearId: year.yearId,\n                                      semesterId: semester.semesterId\n                                    }}\n                                    deleteSemester={this.deleteSemester}\n                                    addCourse={this.addCourse}\n                                  />\n                                </td>\n                                {semester.courses.length > 0 ? (\n                                  <React.Fragment\n                                    key={Math.floor(Math.random() * 1000)}\n                                  >\n                                    <td>\n                                      {semester.courses[0].courseCode}\n                                      <CourseMenus />\n                                    </td>\n                                  </React.Fragment>\n                                ) : null}\n                              </tr>\n                              {semester.courses.length > 1\n                                ? semester.courses.map((course, courseIdx) =>\n                                    courseIdx > 0 ? (\n                                      <tr\n                                        key={Math.floor(Math.random() * 1000)}\n                                      >\n                                        <td>\n                                          {course.courseCode}\n                                          <CourseMenus />\n                                        </td>\n                                      </tr>\n                                    ) : null\n                                  )\n                                : null}\n                            </React.Fragment>\n                          ) : null\n                        )\n                      : null}\n                  </React.Fragment>\n                );\n              })}\n            </tbody>\n          </Table>\n          <table style={{ border: \"none\" }}>\n            <tbody>\n              <tr>\n                <td>\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline-secondary\"\n                    style={{\n                      float: \"left\"\n                    }}\n                    onClick={this.addYear}\n                  >\n                    <span>\n                      <FontAwesomeIcon icon={faPlusCircle} />\n                    </span>\n                    {\" Add Year\"}\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"container\"></div>\n      </div>\n    );\n  }\n}\n\nexport default SyllabusCreator;\n","export default {\n  restApiBaseUrl: \"https://cseju.herokuapp.com/api\"\n};\n"],"sourceRoot":""}